defmodule QRCodeTest do
  use ExUnit.Case
  doctest QRCode

  test "Hello, world!" do
    assert QRCode.encode("Hello, world!") == %QRCode{
      data: <<0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0xFE, 0xCB, 0xF8, 0x4, 0x10, 0x90, 0x40, 0x2E, 0x80, 0xBA, 0x1, 0x75, 0x75,
  0xD0, 0xB, 0xA8, 0xAE, 0x80, 0x41, 0x59, 0x4, 0x3, 0xFA, 0xAF, 0xE0, 0x0,
  0x13, 0x0, 0x0, 0x8B, 0xB7, 0xC8, 0x3, 0x42, 0x5F, 0x80, 0x27, 0xB5, 0xA4,
  0x1, 0xD2, 0xB, 0x0, 0xA, 0xF4, 0xC1, 0x0, 0x0, 0x60, 0x6C, 0x3, 0xFB, 0x5F,
  0x40, 0x10, 0x42, 0xB2, 0x0, 0xBA, 0x99, 0x80, 0x5, 0xD3, 0x36, 0xC0, 0x2E,
  0x90, 0xF0, 0x1, 0x4, 0x28, 0x0, 0xF, 0xE9, 0x58, 0x80, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0::size(1)>>,
      dimension: 29,
      ecc: 'M',
      version: 1
    }
  end

  test "Hello, world! as string" do
    assert QRCode.as_string("Hello, world!") == """
    .............................
    .............................
    .............................
    .............................
    ....#######.##..#.#######....
    ....#.....#....#..#.....#....
    ....#.###.#.......#.###.#....
    ....#.###.#.#.###.#.###.#....
    ....#.###.#.#...#.#.###.#....
    ....#.....#.#.##..#.....#....
    ....#######.#.#.#.#######....
    ............#..##............
    ....#...#.###.##.#####..#....
    .....##.#....#..#.######.....
    ....#..####.##.#.##.#..#.....
    ....###.#..#.....#.##........
    ....#.#.####.#..##.....#.....
    ............##......##.##....
    ....#######.##.#.#####.#.....
    ....#.....#....#.#.##..#.....
    ....#.###.#.#..##..##........
    ....#.###.#..##..##.##.##....
    ....#.###.#..#....####.......
    ....#.....#....#.#...........
    ....#######.#..#.#.##...#....
    .............................
    .............................
    .............................
    .............................
    """
  end

end
